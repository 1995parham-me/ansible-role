---
- name: Verify
  hosts: all
  become: true
  gather_facts: true

  tasks:
    - name: Check if dotfiles directory exists
      ansible.builtin.stat:
        path: ~/dotfiles
      register: dotfiles_dir

    - name: Assert dotfiles directory exists
      ansible.builtin.assert:
        that:
          - dotfiles_dir.stat.exists
          - dotfiles_dir.stat.isdir
        fail_msg: "Dotfiles directory does not exist"
        success_msg: "Dotfiles directory exists"

    - name: Check if .zshrc.shared symlink exists
      ansible.builtin.stat:
        path: ~/.zshrc.shared
      register: zshrc_shared

    - name: Assert .zshrc.shared is a symlink
      ansible.builtin.assert:
        that:
          - zshrc_shared.stat.exists
          - zshrc_shared.stat.islnk
        fail_msg: ".zshrc.shared is not a symlink"
        success_msg: ".zshrc.shared symlink exists"

    - name: Check if git is configured # noqa: command-instead-of-module
      ansible.builtin.command: git config --get user.name
      register: git_name
      changed_when: false
      failed_when: false

    - name: Assert git is configured
      ansible.builtin.assert:
        that:
          - git_name.rc == 0
          - git_name.stdout | length > 0
        fail_msg: "Git user.name is not configured"
        success_msg: "Git is properly configured"

    - name: Check if zsh is installed
      ansible.builtin.command: which zsh
      register: zsh_installed
      changed_when: false
      failed_when: false

    - name: Assert zsh is installed
      ansible.builtin.assert:
        that:
          - zsh_installed.rc == 0
        fail_msg: "ZSH is not installed"
        success_msg: "ZSH is installed"

    - name: Check if required packages are installed (Ubuntu)
      ansible.builtin.command: "which {{ item }}"
      loop:
        - tmux
        - batcat
        - htop
      register: packages_check
      changed_when: false
      failed_when: false
      when: ansible_os_family == 'Debian'

    - name: Assert required packages are installed (Ubuntu)
      ansible.builtin.assert:
        that:
          - item.rc == 0
        fail_msg: "Package {{ item.item }} is not installed"
        success_msg: "Package {{ item.item }} is installed"
      loop: "{{ packages_check.results }}"
      when: ansible_os_family == 'Debian'
